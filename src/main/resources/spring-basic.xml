<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<util:properties id="requestinfo" location="classpath:requestinfo.properties" />
	<!-- ************************************************************************************************* -->
    <!-- <context:annotation-config/> 隐式地向 Spring容器注册                                                                                                                                                                                  -->
    <!-- AutowiredAnnotationBeanPostProcessor、                                                                                                                                                                                                            -->
    <!-- RequiredAnnotationBeanPostProcessor、                                                                                                                                                                                                                -->
    <!-- CommonAnnotationBeanPostProcessor                                                                 -->
    <!-- PersistenceAnnotationBeanPostProcessor这4个BeanPostProcessor                                        -->  
    <!-- ************************************************************************************************* -->
	
    <!-- 该配置项其实也包含了自动注入上述processor的功能，因此当使用<context:component-scan/>后， -->
    <!-- 即可将<context:annotation-config/>省去                                                                                                             -->
	<context:component-scan base-package="com.somnus" use-default-filters="false">
		<!-- 扫描符合@Component @Service @Repository的类 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	
    <!-- application 上下文 -->
    <bean class="com.somnus.ApplicationContextHolder"/>
    
    <!-- 静态工厂 -->
    <bean id="user" class="com.somnus.factory.BeanFactory" factory-method="getInstance">
    	<constructor-arg>
            <ref bean="somnus" />
        </constructor-arg>
    </bean>
    <!-- 实例工厂 -->
    <bean id="factory" class="com.somnus.factory.BeanFactory2"/>
    <bean id="info" factory-bean="factory" factory-method="getInstance"/>
    
    <import resource="classpath:/spring-aop.xml"/>
    <import resource="classpath:/spring-aspect.xml"/>
    <import resource="classpath:/spring-env.xml"/>
    <import resource="classpath:/spring-resource-db.xml"/>
    <import resource="classpath*:/jms/spring-*.xml" />
    <import resource="classpath*:/metaq/spring-*.xml" />
    <import resource="classpath*:META-INF/spring-common.xml"/>
    <import resource="classpath:/spring-redis.xml"/>
    <import resource="classpath:/spring-memcached.xml"/>
    <import resource="classpath:/spring-task.xml"/>
</beans>
